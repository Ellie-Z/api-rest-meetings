/* 
 * BlueJeans onVideo REST API
 *
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\").  ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use on of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using com.bluejeans.api.rest.onvideo.Client;
using com.bluejeans.api.rest.onvideo.Model;

namespace com.bluejeans.api.rest.onvideo.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICommandCenterApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// List Live Meeting Endpoints by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists endpoints for a given meeting in progress.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>MeetingExtendedIndigo</returns>
        MeetingExtendedIndigo GetMeetingLiveByEnterprise (int? enterpriseId, string meetingUuid);

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists endpoints for a given meeting in progress.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        ApiResponse<MeetingExtendedIndigo> GetMeetingLiveByEnterpriseWithHttpInfo (int? enterpriseId, string meetingUuid);
        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>MeetingExtendedIndigo</returns>
        MeetingExtendedIndigo GetMeetingPastByEnterprise (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null);

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        ApiResponse<MeetingExtendedIndigo> GetMeetingPastByEnterpriseWithHttpInfo (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null);
        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>MeetingExtendedIndigo</returns>
        MeetingExtendedIndigo GetMeetingPastByUser (int? userId, string meetingUuid);

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        ApiResponse<MeetingExtendedIndigo> GetMeetingPastByUserWithHttpInfo (int? userId, string meetingUuid);
        /// <summary>
        /// Live Meetings Summary by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meetings in progress by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>MeetingIndigoList</returns>
        MeetingIndigoList GetMeetingsLiveByEnterprise (int? enterpriseId);

        /// <summary>
        /// Live Meetings Summary by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meetings in progress by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        ApiResponse<MeetingIndigoList> GetMeetingsLiveByEnterpriseWithHttpInfo (int? enterpriseId);
        /// <summary>
        /// List Past Meetings by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>MeetingIndigoList</returns>
        MeetingIndigoList GetMeetingsPastByEnterprise (int? enterpriseId, int? offset = null, int? limit = null, string filter = null);

        /// <summary>
        /// List Past Meetings by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        ApiResponse<MeetingIndigoList> GetMeetingsPastByEnterpriseWithHttpInfo (int? enterpriseId, int? offset = null, int? limit = null, string filter = null);
        /// <summary>
        /// List Past Meetings by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>MeetingIndigoList</returns>
        MeetingIndigoList GetMeetingsPastByUser (int? userId);

        /// <summary>
        /// List Past Meetings by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        ApiResponse<MeetingIndigoList> GetMeetingsPastByUserWithHttpInfo (int? userId);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// List Live Meeting Endpoints by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists endpoints for a given meeting in progress.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingLiveByEnterpriseAsync (int? enterpriseId, string meetingUuid);

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists endpoints for a given meeting in progress.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingLiveByEnterpriseAsyncWithHttpInfo (int? enterpriseId, string meetingUuid);
        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingPastByEnterpriseAsync (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null);

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingPastByEnterpriseAsyncWithHttpInfo (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null);
        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingPastByUserAsync (int? userId, string meetingUuid);

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists meeting endpoints for completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingPastByUserAsyncWithHttpInfo (int? userId, string meetingUuid);
        /// <summary>
        /// Live Meetings Summary by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meetings in progress by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>Task of MeetingIndigoList</returns>
        System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsLiveByEnterpriseAsync (int? enterpriseId);

        /// <summary>
        /// Live Meetings Summary by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists meetings in progress by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsLiveByEnterpriseAsyncWithHttpInfo (int? enterpriseId);
        /// <summary>
        /// List Past Meetings by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>Task of MeetingIndigoList</returns>
        System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsPastByEnterpriseAsync (int? enterpriseId, int? offset = null, int? limit = null, string filter = null);

        /// <summary>
        /// List Past Meetings by Enterprise
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by enterprise.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsPastByEnterpriseAsyncWithHttpInfo (int? enterpriseId, int? offset = null, int? limit = null, string filter = null);
        /// <summary>
        /// List Past Meetings by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>Task of MeetingIndigoList</returns>
        System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsPastByUserAsync (int? userId);

        /// <summary>
        /// List Past Meetings by User
        /// </summary>
        /// <remarks>
        /// This endpoint lists completed meetings by user.
        /// </remarks>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsPastByUserAsyncWithHttpInfo (int? userId);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CommandCenterApi : ICommandCenterApi
    {
        private com.bluejeans.api.rest.onvideo.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CommandCenterApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CommandCenterApi(String basePath)
        {
            this.Configuration = new Configuration(new ApiClient(basePath));

            ExceptionFactory = com.bluejeans.api.rest.onvideo.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CommandCenterApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CommandCenterApi(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = com.bluejeans.api.rest.onvideo.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public com.bluejeans.api.rest.onvideo.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public Dictionary<String, String> DefaultHeader()
        {
            return this.Configuration.DefaultHeader;
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise This endpoint lists endpoints for a given meeting in progress.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>MeetingExtendedIndigo</returns>
        public MeetingExtendedIndigo GetMeetingLiveByEnterprise (int? enterpriseId, string meetingUuid)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = GetMeetingLiveByEnterpriseWithHttpInfo(enterpriseId, meetingUuid);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise This endpoint lists endpoints for a given meeting in progress.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        public ApiResponse< MeetingExtendedIndigo > GetMeetingLiveByEnterpriseWithHttpInfo (int? enterpriseId, string meetingUuid)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingLiveByEnterprise");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingLiveByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/live/{meeting_uuid}/endpoints/";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingLiveByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise This endpoint lists endpoints for a given meeting in progress.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        public async System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingLiveByEnterpriseAsync (int? enterpriseId, string meetingUuid)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = await GetMeetingLiveByEnterpriseAsyncWithHttpInfo(enterpriseId, meetingUuid);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Live Meeting Endpoints by Enterprise This endpoint lists endpoints for a given meeting in progress.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingLiveByEnterpriseAsyncWithHttpInfo (int? enterpriseId, string meetingUuid)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingLiveByEnterprise");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingLiveByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/live/{meeting_uuid}/endpoints/";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingLiveByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>MeetingExtendedIndigo</returns>
        public MeetingExtendedIndigo GetMeetingPastByEnterprise (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = GetMeetingPastByEnterpriseWithHttpInfo(enterpriseId, meetingUuid, includeEndpoints);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        public ApiResponse< MeetingExtendedIndigo > GetMeetingPastByEnterpriseWithHttpInfo (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingPastByEnterprise");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingPastByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/{meeting_uuid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter
            if (includeEndpoints != null) localVarQueryParams.Add("includeEndpoints", Configuration.ApiClient.ParameterToString(includeEndpoints)); // query parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingPastByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        public async System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingPastByEnterpriseAsync (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = await GetMeetingPastByEnterpriseAsyncWithHttpInfo(enterpriseId, meetingUuid, includeEndpoints);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by Enterprise This endpoint lists meeting endpoints for completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <param name="includeEndpoints">Option to include detailed data on endpoints (optional)</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingPastByEnterpriseAsyncWithHttpInfo (int? enterpriseId, string meetingUuid, bool? includeEndpoints = null)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingPastByEnterprise");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingPastByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/{meeting_uuid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter
            if (includeEndpoints != null) localVarQueryParams.Add("includeEndpoints", Configuration.ApiClient.ParameterToString(includeEndpoints)); // query parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingPastByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User This endpoint lists meeting endpoints for completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>MeetingExtendedIndigo</returns>
        public MeetingExtendedIndigo GetMeetingPastByUser (int? userId, string meetingUuid)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = GetMeetingPastByUserWithHttpInfo(userId, meetingUuid);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User This endpoint lists meeting endpoints for completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>ApiResponse of MeetingExtendedIndigo</returns>
        public ApiResponse< MeetingExtendedIndigo > GetMeetingPastByUserWithHttpInfo (int? userId, string meetingUuid)
        {
            // verify the required parameter 'userId' is set
            if (userId == null)
                throw new ApiException(400, "Missing required parameter 'userId' when calling CommandCenterApi->GetMeetingPastByUser");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingPastByUser");

            var localVarPath = "/v1/user/{user_id}/indigo/meetings/{meeting_uuid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (userId != null) localVarPathParams.Add("user_id", Configuration.ApiClient.ParameterToString(userId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingPastByUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User This endpoint lists meeting endpoints for completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of MeetingExtendedIndigo</returns>
        public async System.Threading.Tasks.Task<MeetingExtendedIndigo> GetMeetingPastByUserAsync (int? userId, string meetingUuid)
        {
             ApiResponse<MeetingExtendedIndigo> localVarResponse = await GetMeetingPastByUserAsyncWithHttpInfo(userId, meetingUuid);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Meeting Endpoints &amp; Stats by User This endpoint lists meeting endpoints for completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <param name="meetingUuid">The universally unique identifier (UUID) of the meeting of interest. This value is a string which contains 6 alphanumeric segments separated by dashes.</param>
        /// <returns>Task of ApiResponse (MeetingExtendedIndigo)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingExtendedIndigo>> GetMeetingPastByUserAsyncWithHttpInfo (int? userId, string meetingUuid)
        {
            // verify the required parameter 'userId' is set
            if (userId == null)
                throw new ApiException(400, "Missing required parameter 'userId' when calling CommandCenterApi->GetMeetingPastByUser");
            // verify the required parameter 'meetingUuid' is set
            if (meetingUuid == null)
                throw new ApiException(400, "Missing required parameter 'meetingUuid' when calling CommandCenterApi->GetMeetingPastByUser");

            var localVarPath = "/v1/user/{user_id}/indigo/meetings/{meeting_uuid}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (userId != null) localVarPathParams.Add("user_id", Configuration.ApiClient.ParameterToString(userId)); // path parameter
            if (meetingUuid != null) localVarPathParams.Add("meeting_uuid", Configuration.ApiClient.ParameterToString(meetingUuid)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingPastByUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingExtendedIndigo>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingExtendedIndigo) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingExtendedIndigo)));
            
        }

        /// <summary>
        /// Live Meetings Summary by Enterprise This endpoint lists meetings in progress by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>MeetingIndigoList</returns>
        public MeetingIndigoList GetMeetingsLiveByEnterprise (int? enterpriseId)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = GetMeetingsLiveByEnterpriseWithHttpInfo(enterpriseId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Live Meetings Summary by Enterprise This endpoint lists meetings in progress by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        public ApiResponse< MeetingIndigoList > GetMeetingsLiveByEnterpriseWithHttpInfo (int? enterpriseId)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingsLiveByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/live";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsLiveByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

        /// <summary>
        /// Live Meetings Summary by Enterprise This endpoint lists meetings in progress by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>Task of MeetingIndigoList</returns>
        public async System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsLiveByEnterpriseAsync (int? enterpriseId)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = await GetMeetingsLiveByEnterpriseAsyncWithHttpInfo(enterpriseId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Live Meetings Summary by Enterprise This endpoint lists meetings in progress by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsLiveByEnterpriseAsyncWithHttpInfo (int? enterpriseId)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingsLiveByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings/live";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsLiveByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

        /// <summary>
        /// List Past Meetings by Enterprise This endpoint lists completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>MeetingIndigoList</returns>
        public MeetingIndigoList GetMeetingsPastByEnterprise (int? enterpriseId, int? offset = null, int? limit = null, string filter = null)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = GetMeetingsPastByEnterpriseWithHttpInfo(enterpriseId, offset, limit, filter);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Past Meetings by Enterprise This endpoint lists completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        public ApiResponse< MeetingIndigoList > GetMeetingsPastByEnterpriseWithHttpInfo (int? enterpriseId, int? offset = null, int? limit = null, string filter = null)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingsPastByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (offset != null) localVarQueryParams.Add("offset", Configuration.ApiClient.ParameterToString(offset)); // query parameter
            if (limit != null) localVarQueryParams.Add("limit", Configuration.ApiClient.ParameterToString(limit)); // query parameter
            if (filter != null) localVarQueryParams.Add("filter", Configuration.ApiClient.ParameterToString(filter)); // query parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsPastByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

        /// <summary>
        /// List Past Meetings by Enterprise This endpoint lists completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>Task of MeetingIndigoList</returns>
        public async System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsPastByEnterpriseAsync (int? enterpriseId, int? offset = null, int? limit = null, string filter = null)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = await GetMeetingsPastByEnterpriseAsyncWithHttpInfo(enterpriseId, offset, limit, filter);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Past Meetings by Enterprise This endpoint lists completed meetings by enterprise.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="enterpriseId">The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint.</param>
        /// <param name="offset">Page Number (optional)</param>
        /// <param name="limit">Per page (optional)</param>
        /// <param name="filter">URL-encoded JSON string (optional)</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsPastByEnterpriseAsyncWithHttpInfo (int? enterpriseId, int? offset = null, int? limit = null, string filter = null)
        {
            // verify the required parameter 'enterpriseId' is set
            if (enterpriseId == null)
                throw new ApiException(400, "Missing required parameter 'enterpriseId' when calling CommandCenterApi->GetMeetingsPastByEnterprise");

            var localVarPath = "/v1/enterprise/{enterprise_id}/indigo/meetings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (enterpriseId != null) localVarPathParams.Add("enterprise_id", Configuration.ApiClient.ParameterToString(enterpriseId)); // path parameter
            if (offset != null) localVarQueryParams.Add("offset", Configuration.ApiClient.ParameterToString(offset)); // query parameter
            if (limit != null) localVarQueryParams.Add("limit", Configuration.ApiClient.ParameterToString(limit)); // query parameter
            if (filter != null) localVarQueryParams.Add("filter", Configuration.ApiClient.ParameterToString(filter)); // query parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsPastByEnterprise", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

        /// <summary>
        /// List Past Meetings by User This endpoint lists completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>MeetingIndigoList</returns>
        public MeetingIndigoList GetMeetingsPastByUser (int? userId)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = GetMeetingsPastByUserWithHttpInfo(userId);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Past Meetings by User This endpoint lists completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>ApiResponse of MeetingIndigoList</returns>
        public ApiResponse< MeetingIndigoList > GetMeetingsPastByUserWithHttpInfo (int? userId)
        {
            // verify the required parameter 'userId' is set
            if (userId == null)
                throw new ApiException(400, "Missing required parameter 'userId' when calling CommandCenterApi->GetMeetingsPastByUser");

            var localVarPath = "/v1/user/{user_id}/indigo/meetings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (userId != null) localVarPathParams.Add("user_id", Configuration.ApiClient.ParameterToString(userId)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsPastByUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

        /// <summary>
        /// List Past Meetings by User This endpoint lists completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>Task of MeetingIndigoList</returns>
        public async System.Threading.Tasks.Task<MeetingIndigoList> GetMeetingsPastByUserAsync (int? userId)
        {
             ApiResponse<MeetingIndigoList> localVarResponse = await GetMeetingsPastByUserAsyncWithHttpInfo(userId);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Past Meetings by User This endpoint lists completed meetings by user.
        /// </summary>
        /// <exception cref="com.bluejeans.api.rest.onvideo.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="userId">The ID of the user of interest. This value is an integer which can be retrieved for the current user via the Get User Account Details endpoint.</param>
        /// <returns>Task of ApiResponse (MeetingIndigoList)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<MeetingIndigoList>> GetMeetingsPastByUserAsyncWithHttpInfo (int? userId)
        {
            // verify the required parameter 'userId' is set
            if (userId == null)
                throw new ApiException(400, "Missing required parameter 'userId' when calling CommandCenterApi->GetMeetingsPastByUser");

            var localVarPath = "/v1/user/{user_id}/indigo/meetings";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (userId != null) localVarPathParams.Add("user_id", Configuration.ApiClient.ParameterToString(userId)); // path parameter

            // authentication (access_token) required
            if (!String.IsNullOrEmpty(Configuration.GetApiKeyWithPrefix("access_token")))
            {
                localVarQueryParams["access_token"] = Configuration.GetApiKeyWithPrefix("access_token");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetMeetingsPastByUser", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<MeetingIndigoList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (MeetingIndigoList) Configuration.ApiClient.Deserialize(localVarResponse, typeof(MeetingIndigoList)));
            
        }

    }
}
