<?php
/**
 * EndpointTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BlueJeans onVideo REST API
 *
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\"). ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use one of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * EndpointTest Class Doc Comment
 *
 * @category    Class */
// * @description Endpoint
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class EndpointTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "Endpoint"
     */
    public function testEndpoint()
    {

    }

    /**
     * Test attribute "ec_mode"
     */
    public function testPropertyEcMode()
    {

    }

    /**
     * Test attribute "creationtime"
     */
    public function testPropertyCreationtime()
    {

    }

    /**
     * Test attribute "audio_remote_rtcp_address"
     */
    public function testPropertyAudioRemoteRtcpAddress()
    {

    }

    /**
     * Test attribute "video_send_codec"
     */
    public function testPropertyVideoSendCodec()
    {

    }

    /**
     * Test attribute "audio_play_id"
     */
    public function testPropertyAudioPlayId()
    {

    }

    /**
     * Test attribute "call_quality_recv"
     */
    public function testPropertyCallQualityRecv()
    {

    }

    /**
     * Test attribute "session_out"
     */
    public function testPropertySessionOut()
    {

    }

    /**
     * Test attribute "audio_local_address"
     */
    public function testPropertyAudioLocalAddress()
    {

    }

    /**
     * Test attribute "meetingid"
     */
    public function testPropertyMeetingid()
    {

    }

    /**
     * Test attribute "video_send_width"
     */
    public function testPropertyVideoSendWidth()
    {

    }

    /**
     * Test attribute "call_quality_send"
     */
    public function testPropertyCallQualitySend()
    {

    }

    /**
     * Test attribute "mhaddress"
     */
    public function testPropertyMhaddress()
    {

    }

    /**
     * Test attribute "rdc_controllee_capable"
     */
    public function testPropertyRdcControlleeCapable()
    {

    }

    /**
     * Test attribute "audio_cap_name"
     */
    public function testPropertyAudioCapName()
    {

    }

    /**
     * Test attribute "proxy_info"
     */
    public function testPropertyProxyInfo()
    {

    }

    /**
     * Test attribute "audio_send_codec"
     */
    public function testPropertyAudioSendCodec()
    {

    }

    /**
     * Test attribute "vendor"
     */
    public function testPropertyVendor()
    {

    }

    /**
     * Test attribute "video_recv_width"
     */
    public function testPropertyVideoRecvWidth()
    {

    }

    /**
     * Test attribute "conaddress"
     */
    public function testPropertyConaddress()
    {

    }

    /**
     * Test attribute "talk_detected"
     */
    public function testPropertyTalkDetected()
    {

    }

    /**
     * Test attribute "sub_layout"
     */
    public function testPropertySubLayout()
    {

    }

    /**
     * Test attribute "audio_rtcp_relay"
     */
    public function testPropertyAudioRtcpRelay()
    {

    }

    /**
     * Test attribute "audio_recv_local_mute"
     */
    public function testPropertyAudioRecvLocalMute()
    {

    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {

    }

    /**
     * Test attribute "video_local_address"
     */
    public function testPropertyVideoLocalAddress()
    {

    }

    /**
     * Test attribute "audio_local_rtcp_address"
     */
    public function testPropertyAudioLocalRtcpAddress()
    {

    }

    /**
     * Test attribute "content_rtp_relay"
     */
    public function testPropertyContentRtpRelay()
    {

    }

    /**
     * Test attribute "content_local_rtcp_address"
     */
    public function testPropertyContentLocalRtcpAddress()
    {

    }

    /**
     * Test attribute "remote_connection_count"
     */
    public function testPropertyRemoteConnectionCount()
    {

    }

    /**
     * Test attribute "callrate"
     */
    public function testPropertyCallrate()
    {

    }

    /**
     * Test attribute "mixer_guid"
     */
    public function testPropertyMixerGuid()
    {

    }

    /**
     * Test attribute "transport"
     */
    public function testPropertyTransport()
    {

    }

    /**
     * Test attribute "audio_cap_select_id"
     */
    public function testPropertyAudioCapSelectId()
    {

    }

    /**
     * Test attribute "country_code"
     */
    public function testPropertyCountryCode()
    {

    }

    /**
     * Test attribute "rdc_controller_capable"
     */
    public function testPropertyRdcControllerCapable()
    {

    }

    /**
     * Test attribute "pairedname"
     */
    public function testPropertyPairedname()
    {

    }

    /**
     * Test attribute "video_rtcp_relay"
     */
    public function testPropertyVideoRtcpRelay()
    {

    }

    /**
     * Test attribute "endpoint_cpu_params"
     */
    public function testPropertyEndpointCpuParams()
    {

    }

    /**
     * Test attribute "video_remote_address"
     */
    public function testPropertyVideoRemoteAddress()
    {

    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {

    }

    /**
     * Test attribute "content_recv"
     */
    public function testPropertyContentRecv()
    {

    }

    /**
     * Test attribute "local_name"
     */
    public function testPropertyLocalName()
    {

    }

    /**
     * Test attribute "bjn_user_id"
     */
    public function testPropertyBjnUserId()
    {

    }

    /**
     * Test attribute "content_remote_address"
     */
    public function testPropertyContentRemoteAddress()
    {

    }

    /**
     * Test attribute "audio_send"
     */
    public function testPropertyAudioSend()
    {

    }

    /**
     * Test attribute "participant_dtmf_menus"
     */
    public function testPropertyParticipantDtmfMenus()
    {

    }

    /**
     * Test attribute "video_rtcp_transpor"
     */
    public function testPropertyVideoRtcpTranspor()
    {

    }

    /**
     * Test attribute "audio_rtcp_transport"
     */
    public function testPropertyAudioRtcpTransport()
    {

    }

    /**
     * Test attribute "relay_node_id"
     */
    public function testPropertyRelayNodeId()
    {

    }

    /**
     * Test attribute "content_remote_rtcp_address"
     */
    public function testPropertyContentRemoteRtcpAddress()
    {

    }

    /**
     * Test attribute "audio_rtp_relay"
     */
    public function testPropertyAudioRtpRelay()
    {

    }

    /**
     * Test attribute "video_rtp_transport"
     */
    public function testPropertyVideoRtpTransport()
    {

    }

    /**
     * Test attribute "content_recv_local_mute"
     */
    public function testPropertyContentRecvLocalMute()
    {

    }

    /**
     * Test attribute "layout"
     */
    public function testPropertyLayout()
    {

    }

    /**
     * Test attribute "content_send"
     */
    public function testPropertyContentSend()
    {

    }

    /**
     * Test attribute "remoteaddress"
     */
    public function testPropertyRemoteaddress()
    {

    }

    /**
     * Test attribute "meeting_guid"
     */
    public function testPropertyMeetingGuid()
    {

    }

    /**
     * Test attribute "connecttime"
     */
    public function testPropertyConnecttime()
    {

    }

    /**
     * Test attribute "localaddress"
     */
    public function testPropertyLocaladdress()
    {

    }

    /**
     * Test attribute "audio_remote_address"
     */
    public function testPropertyAudioRemoteAddress()
    {

    }

    /**
     * Test attribute "bonded_audio_guid"
     */
    public function testPropertyBondedAudioGuid()
    {

    }

    /**
     * Test attribute "audio_recv_remote_mute"
     */
    public function testPropertyAudioRecvRemoteMute()
    {

    }

    /**
     * Test attribute "session_out_relay"
     */
    public function testPropertySessionOutRelay()
    {

    }

    /**
     * Test attribute "leader"
     */
    public function testPropertyLeader()
    {

    }

    /**
     * Test attribute "content_local_address"
     */
    public function testPropertyContentLocalAddress()
    {

    }

    /**
     * Test attribute "movie_capable"
     */
    public function testPropertyMovieCapable()
    {

    }

    /**
     * Test attribute "video_recv_local_mute"
     */
    public function testPropertyVideoRecvLocalMute()
    {

    }

    /**
     * Test attribute "content_rtp_transport"
     */
    public function testPropertyContentRtpTransport()
    {

    }

    /**
     * Test attribute "rdc_version"
     */
    public function testPropertyRdcVersion()
    {

    }

    /**
     * Test attribute "audio_recv"
     */
    public function testPropertyAudioRecv()
    {

    }

    /**
     * Test attribute "content_relay_server"
     */
    public function testPropertyContentRelayServer()
    {

    }

    /**
     * Test attribute "video_recv"
     */
    public function testPropertyVideoRecv()
    {

    }

    /**
     * Test attribute "visibility"
     */
    public function testPropertyVisibility()
    {

    }

    /**
     * Test attribute "sessionid"
     */
    public function testPropertySessionid()
    {

    }

    /**
     * Test attribute "content_rtcp_relay"
     */
    public function testPropertyContentRtcpRelay()
    {

    }

    /**
     * Test attribute "locales"
     */
    public function testPropertyLocales()
    {

    }

    /**
     * Test attribute "medaddress"
     */
    public function testPropertyMedaddress()
    {

    }

    /**
     * Test attribute "html_layout_guid"
     */
    public function testPropertyHtmlLayoutGuid()
    {

    }

    /**
     * Test attribute "endpoint"
     */
    public function testPropertyEndpoint()
    {

    }

    /**
     * Test attribute "video_drop"
     */
    public function testPropertyVideoDrop()
    {

    }

    /**
     * Test attribute "content_rtcp_transport"
     */
    public function testPropertyContentRtcpTransport()
    {

    }

    /**
     * Test attribute "video_remote_rtcp_address"
     */
    public function testPropertyVideoRemoteRtcpAddress()
    {

    }

    /**
     * Test attribute "video_rtp_relay"
     */
    public function testPropertyVideoRtpRelay()
    {

    }

    /**
     * Test attribute "mixaddress"
     */
    public function testPropertyMixaddress()
    {

    }

    /**
     * Test attribute "siphttp_proxy_transport"
     */
    public function testPropertySiphttpProxyTransport()
    {

    }

    /**
     * Test attribute "video_recv_codec"
     */
    public function testPropertyVideoRecvCodec()
    {

    }

    /**
     * Test attribute "audio_recv_codec"
     */
    public function testPropertyAudioRecvCodec()
    {

    }

    /**
     * Test attribute "session_in"
     */
    public function testPropertySessionIn()
    {

    }

    /**
     * Test attribute "bonded_video_guid"
     */
    public function testPropertyBondedVideoGuid()
    {

    }

    /**
     * Test attribute "call_quality"
     */
    public function testPropertyCallQuality()
    {

    }

    /**
     * Test attribute "meetingjointime"
     */
    public function testPropertyMeetingjointime()
    {

    }

    /**
     * Test attribute "session_in_relay"
     */
    public function testPropertySessionInRelay()
    {

    }

    /**
     * Test attribute "pairedremoteaddress"
     */
    public function testPropertyPairedremoteaddress()
    {

    }

    /**
     * Test attribute "video_send_height"
     */
    public function testPropertyVideoSendHeight()
    {

    }

    /**
     * Test attribute "video_recv_height"
     */
    public function testPropertyVideoRecvHeight()
    {

    }

    /**
     * Test attribute "secure_call"
     */
    public function testPropertySecureCall()
    {

    }

    /**
     * Test attribute "video_local_rtcp_address"
     */
    public function testPropertyVideoLocalRtcpAddress()
    {

    }

    /**
     * Test attribute "audio_play_name"
     */
    public function testPropertyAudioPlayName()
    {

    }

    /**
     * Test attribute "video_cap_id"
     */
    public function testPropertyVideoCapId()
    {

    }

    /**
     * Test attribute "audio_rtp_transport"
     */
    public function testPropertyAudioRtpTransport()
    {

    }

    /**
     * Test attribute "meeting_info_mode"
     */
    public function testPropertyMeetingInfoMode()
    {

    }

    /**
     * Test attribute "callhostname"
     */
    public function testPropertyCallhostname()
    {

    }

    /**
     * Test attribute "callguid"
     */
    public function testPropertyCallguid()
    {

    }

    /**
     * Test attribute "audio_cap_id"
     */
    public function testPropertyAudioCapId()
    {

    }

    /**
     * Test attribute "video_send"
     */
    public function testPropertyVideoSend()
    {

    }

    /**
     * Test attribute "content_recv_codec"
     */
    public function testPropertyContentRecvCodec()
    {

    }

    /**
     * Test attribute "session_relay"
     */
    public function testPropertySessionRelay()
    {

    }

    /**
     * Test attribute "video_recv_remote_mute"
     */
    public function testPropertyVideoRecvRemoteMute()
    {

    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {

    }

    /**
     * Test attribute "bonded_video_name"
     */
    public function testPropertyBondedVideoName()
    {

    }

    /**
     * Test attribute "is_in_roster"
     */
    public function testPropertyIsInRoster()
    {

    }

}
