<?php
/**
 * MeetingExtendedIndigoTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  BlueJeansOnVideoRestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BlueJeans onVideo REST API
 *
 * # Video That Works Where You Do. This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data and current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video administration into your applications.     ## Getting Started Before you start using BlueJeans' API's, you must first have a BlueJeans account enabled for API Access.  Contact [BlueJeans Support](mailto:Support@BlueJeans.com) for assistance.  <br /><br />Once you have an account, you may start writing application code to authenticate and make API calls.  *Alternatively*, you can use this developer site to test the BlueJeans' API's and develop a level of familiarity before you write production code.  <br /> ### To Make API Calls from This Site If you want to use this developer site to try various BlueJeans' API's, here are the steps required to authenticate and enable your Developer Session to place API calls. 1. Choose Method for Authenticating       * Click on the desired Authentication method from below.      * Click on the **Try It Out** button. 1. Make Authentication request      * Follow API's instructions and input the API parameters.      * Click on the blue **Execute** button.      * If successful, the API returns with JSON data containing a field called **access_token**.  Copy/save this value. 1. Authorize BlueJeans Developer Session.      * Click on the green **Authorize button**.       * The site will show you a pop-up window for authorization.      * Enter your access token in the field named **api_key**      * Click on the **Authorize** button  Your current BlueJeans developer session is now authenticated and ready to place API calls.  The web site will automatically include your access token on any API calls you make.  ## About onVideo Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ### Grant Types Bluejeans provides 4 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to perform API operations. * Password Credentials Grant – Authenticate with a username and password and receive an access token with user level permission. Known as two-legged OAuth. * Meeting Credentials Grant – Authenticate with a meeting ID and meeting passcode and receive an access token with meeting level permission. Known as two-legged OAuth. * Client Credentials Grant –  Authenticate with a client ID and client secret and receive an access token with enterprise level permission. Known as two-legged OAuth. * Authorization Code Grant – Authentication for your developer's application occurs through a redirection to a BlueJeans authentication page. The application receives an authorization code to be submitted, along with other tokens, to receive an access token. Known as three-legged OAuth. For more information please refer to the [OAuth specification](https://oauth.net/). ### Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – Scope of APIs is limited to individual meetings. * User-level – Scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users. All endpoints in this document that require **Enterprise Admin** access will be marked as such.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace BlueJeansOnVideoRestApi;

/**
 * MeetingExtendedIndigoTest Class Doc Comment
 *
 * @category    Class */
// * @description MeetingExtendedIndigo
/**
 * @package     BlueJeansOnVideoRestApi
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MeetingExtendedIndigoTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "MeetingExtendedIndigo"
     */
    public function testMeetingExtendedIndigo()
    {

    }

    /**
     * Test attribute "meeting_id"
     */
    public function testPropertyMeetingId()
    {

    }

    /**
     * Test attribute "meeting_uuid"
     */
    public function testPropertyMeetingUuid()
    {

    }

    /**
     * Test attribute "user_name"
     */
    public function testPropertyUserName()
    {

    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {

    }

    /**
     * Test attribute "encryption_type"
     */
    public function testPropertyEncryptionType()
    {

    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {

    }

    /**
     * Test attribute "user_full_name"
     */
    public function testPropertyUserFullName()
    {

    }

    /**
     * Test attribute "phone_number"
     */
    public function testPropertyPhoneNumber()
    {

    }

    /**
     * Test attribute "user_features"
     */
    public function testPropertyUserFeatures()
    {

    }

    /**
     * Test attribute "scheduled_from"
     */
    public function testPropertyScheduledFrom()
    {

    }

    /**
     * Test attribute "invitee_count"
     */
    public function testPropertyInviteeCount()
    {

    }

    /**
     * Test attribute "personal"
     */
    public function testPropertyPersonal()
    {

    }

    /**
     * Test attribute "mute_on_entry"
     */
    public function testPropertyMuteOnEntry()
    {

    }

    /**
     * Test attribute "auto_record"
     */
    public function testPropertyAutoRecord()
    {

    }

    /**
     * Test attribute "enterprise_name"
     */
    public function testPropertyEnterpriseName()
    {

    }

    /**
     * Test attribute "moderator_less"
     */
    public function testPropertyModeratorLess()
    {

    }

    /**
     * Test attribute "start_time"
     */
    public function testPropertyStartTime()
    {

    }

    /**
     * Test attribute "end_time"
     */
    public function testPropertyEndTime()
    {

    }

    /**
     * Test attribute "total_call_seconds"
     */
    public function testPropertyTotalCallSeconds()
    {

    }

    /**
     * Test attribute "create_time"
     */
    public function testPropertyCreateTime()
    {

    }

    /**
     * Test attribute "endpoints_count"
     */
    public function testPropertyEndpointsCount()
    {

    }

    /**
     * Test attribute "concurrent_endpoints"
     */
    public function testPropertyConcurrentEndpoints()
    {

    }

    /**
     * Test attribute "live_visible_endpoints_count"
     */
    public function testPropertyLiveVisibleEndpointsCount()
    {

    }

    /**
     * Test attribute "qualaroo_rating"
     */
    public function testPropertyQualarooRating()
    {

    }

    /**
     * Test attribute "qualaroo_count"
     */
    public function testPropertyQualarooCount()
    {

    }

    /**
     * Test attribute "meeting_recording"
     */
    public function testPropertyMeetingRecording()
    {

    }

    /**
     * Test attribute "video_share"
     */
    public function testPropertyVideoShare()
    {

    }

    /**
     * Test attribute "content_share"
     */
    public function testPropertyContentShare()
    {

    }

    /**
     * Test attribute "live_recording"
     */
    public function testPropertyLiveRecording()
    {

    }

    /**
     * Test attribute "live_video_share"
     */
    public function testPropertyLiveVideoShare()
    {

    }

    /**
     * Test attribute "live_content_share"
     */
    public function testPropertyLiveContentShare()
    {

    }

    /**
     * Test attribute "large_meeting"
     */
    public function testPropertyLargeMeeting()
    {

    }

    /**
     * Test attribute "roi_distance"
     */
    public function testPropertyRoiDistance()
    {

    }

    /**
     * Test attribute "mpls"
     */
    public function testPropertyMpls()
    {

    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {

    }

    /**
     * Test attribute "endpoints"
     */
    public function testPropertyEndpoints()
    {

    }

}
