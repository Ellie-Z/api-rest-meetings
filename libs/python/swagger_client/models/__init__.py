# coding: utf-8

"""
    BlueJeans onVideo REST API

    _Video That Works Where You Do, from the world's leader in cloud video communication._ # Authentication Each API request that is sent to BlueJeans requires an access token, which is obtained through the BlueJeans Authentication API. There are several methods (grant types) for obtaining an access token, which follow the OAuth2.0 specification. ## Grant Types * Authorization Code Grant – This grant type is used in an authentication flow commonly referred to as \"three-legged OAuth\". The user authenticates via a BlueJeans page, which provides an authorization code. This code, along with a few other elements, can be used to obtain an access code. * Password Credentials Grant – This grant type is used in a two-legged OAuth flow. Username and password are sent to retrieve an access code. * Client Credentials Grant – This grant type is used in a two-legged OAuth flow.  ## Access & Permissions The access level that is associated with each access token is referred to as the scope. There are three basic levels of access that BlueJeans allows, which affect the level of scope.  Three access levels exist within the Blue Jeans service today. * Meeting-level – Authentication takes place using a meeting ID and passcode, and the scope is limited to APIs that relate to the individual meeting. * User-level – Authentication either takes place via three-legged OAuth, or else a direct authorization token request containing a username or password. Access level depends on the requested scope permissions. * App-level – An application is provisioned either by BlueJeans personnel, or within the BlueJeans Enterprise Admin interface. When provisioning an app, a client key and secret are provided, which is then used to obtain an access token, via the BlueJeans Authentication API. The scope that is associated with the token will provide access to an entire enterprise and all of its users.  All endpoints in this document that require Enterprise Admin access will be marked as such. ## Testing In order to make effective use of this page, you will first use one of the authentication methods to obtain an access token. Once the token is given, use the Authenticate button up in the header to store the token. Each BlueJeans API called after that will use the access token provided. 

    OpenAPI spec version: 1.0.0
    Contact: brandon@bluejeans.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

# import models into model package
from .analytics_endpoint_distribution import AnalyticsEndpointDistribution
from .analytics_endpoint_distribution_distribution import AnalyticsEndpointDistributionDistribution
from .analytics_feedback_comments import AnalyticsFeedbackComments
from .analytics_feedback_comments_comments import AnalyticsFeedbackCommentsComments
from .analytics_feedback_scores import AnalyticsFeedbackScores
from .analytics_roi_data import AnalyticsRoiData
from .analytics_roi_data_roi_ranges import AnalyticsRoiDataRoiRanges
from .analytics_top_users import AnalyticsTopUsers
from .analytics_top_users_usage import AnalyticsTopUsersUsage
from .analytics_usage import AnalyticsUsage
from .analytics_usage_usage import AnalyticsUsageUsage
from .attendee import Attendee
from .content import Content
from .content_content_properties import ContentContentProperties
from .content_content_properties_levels import ContentContentPropertiesLevels
from .endpoint import Endpoint
from .endpoints import Endpoints
from .endpoints_inner import EndpointsInner
from .endpoints_inner_connections import EndpointsInnerConnections
from .enterprise import Enterprise
from .enterprise_user_list import EnterpriseUserList
from .enterprise_user_list_users import EnterpriseUserListUsers
from .error import Error
from .grant_client import GrantClient
from .grant_client_scope import GrantClientScope
from .grant_meeting import GrantMeeting
from .grant_meeting_scope import GrantMeetingScope
from .grant_meeting_scope_meeting import GrantMeetingScopeMeeting
from .grant_password import GrantPassword
from .grant_password_scope import GrantPasswordScope
from .grant_request_client import GrantRequestClient
from .grant_request_meeting import GrantRequestMeeting
from .grant_request_password import GrantRequestPassword
from .layout import Layout
from .meeting import Meeting
from .meeting_advanced_meeting_options import MeetingAdvancedMeetingOptions
from .meeting_history import MeetingHistory
from .meeting_history_leader_info import MeetingHistoryLeaderInfo
from .meeting_history_participant_list import MeetingHistoryParticipantList
from .meeting_state import MeetingState
from .meeting_state_recordinginfo import MeetingStateRecordinginfo
from .numbers import Numbers
from .numbers_label import NumbersLabel
from .numbers_numbers import NumbersNumbers
from .pairing_code import PairingCode
from .pairing_code_turnservers import PairingCodeTurnservers
from .partition import Partition
from .payload_invite import PayloadInvite
from .payload_meeting_state import PayloadMeetingState
from .payload_pairing_code_sip import PayloadPairingCodeSIP
from .payload_pairing_code_web_rtc import PayloadPairingCodeWebRTC
from .recording import Recording
from .recording_recording_chapters import RecordingRecordingChapters
from .recording_recording_sessions import RecordingRecordingSessions
from .recording_started_by import RecordingStartedBy
from .recording_summary import RecordingSummary
from .room import Room
from .user import User
from .user_id import UserId
