/**
 * BlueJeans onVideo REST API
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\").  ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use on of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AnalyticsEndpointDistribution', 'model/AnalyticsEndpointDistributionDistribution', 'model/AnalyticsFeedbackComments', 'model/AnalyticsFeedbackCommentsComments', 'model/AnalyticsFeedbackScores', 'model/AnalyticsRoiData', 'model/AnalyticsRoiDataRoiRanges', 'model/AnalyticsTopUsers', 'model/AnalyticsTopUsersUsage', 'model/AnalyticsUsage', 'model/AnalyticsUsageUsage', 'model/Attendee', 'model/Content', 'model/ContentContentProperties', 'model/ContentContentPropertiesLevels', 'model/Endpoint', 'model/EndpointIndigo', 'model/EndpointIndigoEndpointAttributes1', 'model/EndpointIndigoLocation', 'model/EndpointIndigoSummaryStats', 'model/EndpointIndigoTraceroute', 'model/EndpointIndigoTracerouteTracePath', 'model/Endpoints', 'model/EndpointsInner', 'model/EndpointsInnerConnections', 'model/Enterprise', 'model/EnterpriseUserList', 'model/EnterpriseUserListUsers', 'model/Error', 'model/GrantClient', 'model/GrantClientScope', 'model/GrantMeeting', 'model/GrantMeetingScope', 'model/GrantMeetingScopeMeeting', 'model/GrantPassword', 'model/GrantPasswordScope', 'model/GrantRequestClient', 'model/GrantRequestMeeting', 'model/GrantRequestPassword', 'model/InlineResponse200', 'model/Layout', 'model/Meeting', 'model/MeetingAdvancedMeetingOptions', 'model/MeetingExtendedIndigo', 'model/MeetingHistory', 'model/MeetingHistoryLeaderInfo', 'model/MeetingHistoryParticipantList', 'model/MeetingHistorySharing', 'model/MeetingIndigo', 'model/MeetingIndigoList', 'model/MeetingState', 'model/MeetingStateRecordinginfo', 'model/Numbers', 'model/NumbersLabel', 'model/NumbersNumbers', 'model/PairingCode', 'model/PairingCodeTurnservers', 'model/Partition', 'model/PayloadInvite', 'model/PayloadMeetingState', 'model/PayloadPairingCodeSIP', 'model/PayloadPairingCodeWebRTC', 'model/Recording', 'model/RecordingRecordingChapters', 'model/RecordingRecordingSessions', 'model/RecordingStartedBy', 'model/RecordingSummary', 'model/Room', 'model/User', 'model/UserId', 'api/AnalyticsApi', 'api/AuthenticationApi', 'api/CommandCenterApi', 'api/EnterpriseApi', 'api/HistoryApi', 'api/MeetingApi', 'api/RecordingApi', 'api/UserApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AnalyticsEndpointDistribution'), require('./model/AnalyticsEndpointDistributionDistribution'), require('./model/AnalyticsFeedbackComments'), require('./model/AnalyticsFeedbackCommentsComments'), require('./model/AnalyticsFeedbackScores'), require('./model/AnalyticsRoiData'), require('./model/AnalyticsRoiDataRoiRanges'), require('./model/AnalyticsTopUsers'), require('./model/AnalyticsTopUsersUsage'), require('./model/AnalyticsUsage'), require('./model/AnalyticsUsageUsage'), require('./model/Attendee'), require('./model/Content'), require('./model/ContentContentProperties'), require('./model/ContentContentPropertiesLevels'), require('./model/Endpoint'), require('./model/EndpointIndigo'), require('./model/EndpointIndigoEndpointAttributes1'), require('./model/EndpointIndigoLocation'), require('./model/EndpointIndigoSummaryStats'), require('./model/EndpointIndigoTraceroute'), require('./model/EndpointIndigoTracerouteTracePath'), require('./model/Endpoints'), require('./model/EndpointsInner'), require('./model/EndpointsInnerConnections'), require('./model/Enterprise'), require('./model/EnterpriseUserList'), require('./model/EnterpriseUserListUsers'), require('./model/Error'), require('./model/GrantClient'), require('./model/GrantClientScope'), require('./model/GrantMeeting'), require('./model/GrantMeetingScope'), require('./model/GrantMeetingScopeMeeting'), require('./model/GrantPassword'), require('./model/GrantPasswordScope'), require('./model/GrantRequestClient'), require('./model/GrantRequestMeeting'), require('./model/GrantRequestPassword'), require('./model/InlineResponse200'), require('./model/Layout'), require('./model/Meeting'), require('./model/MeetingAdvancedMeetingOptions'), require('./model/MeetingExtendedIndigo'), require('./model/MeetingHistory'), require('./model/MeetingHistoryLeaderInfo'), require('./model/MeetingHistoryParticipantList'), require('./model/MeetingHistorySharing'), require('./model/MeetingIndigo'), require('./model/MeetingIndigoList'), require('./model/MeetingState'), require('./model/MeetingStateRecordinginfo'), require('./model/Numbers'), require('./model/NumbersLabel'), require('./model/NumbersNumbers'), require('./model/PairingCode'), require('./model/PairingCodeTurnservers'), require('./model/Partition'), require('./model/PayloadInvite'), require('./model/PayloadMeetingState'), require('./model/PayloadPairingCodeSIP'), require('./model/PayloadPairingCodeWebRTC'), require('./model/Recording'), require('./model/RecordingRecordingChapters'), require('./model/RecordingRecordingSessions'), require('./model/RecordingStartedBy'), require('./model/RecordingSummary'), require('./model/Room'), require('./model/User'), require('./model/UserId'), require('./api/AnalyticsApi'), require('./api/AuthenticationApi'), require('./api/CommandCenterApi'), require('./api/EnterpriseApi'), require('./api/HistoryApi'), require('./api/MeetingApi'), require('./api/RecordingApi'), require('./api/UserApi'));
  }
}(function(ApiClient, AnalyticsEndpointDistribution, AnalyticsEndpointDistributionDistribution, AnalyticsFeedbackComments, AnalyticsFeedbackCommentsComments, AnalyticsFeedbackScores, AnalyticsRoiData, AnalyticsRoiDataRoiRanges, AnalyticsTopUsers, AnalyticsTopUsersUsage, AnalyticsUsage, AnalyticsUsageUsage, Attendee, Content, ContentContentProperties, ContentContentPropertiesLevels, Endpoint, EndpointIndigo, EndpointIndigoEndpointAttributes1, EndpointIndigoLocation, EndpointIndigoSummaryStats, EndpointIndigoTraceroute, EndpointIndigoTracerouteTracePath, Endpoints, EndpointsInner, EndpointsInnerConnections, Enterprise, EnterpriseUserList, EnterpriseUserListUsers, Error, GrantClient, GrantClientScope, GrantMeeting, GrantMeetingScope, GrantMeetingScopeMeeting, GrantPassword, GrantPasswordScope, GrantRequestClient, GrantRequestMeeting, GrantRequestPassword, InlineResponse200, Layout, Meeting, MeetingAdvancedMeetingOptions, MeetingExtendedIndigo, MeetingHistory, MeetingHistoryLeaderInfo, MeetingHistoryParticipantList, MeetingHistorySharing, MeetingIndigo, MeetingIndigoList, MeetingState, MeetingStateRecordinginfo, Numbers, NumbersLabel, NumbersNumbers, PairingCode, PairingCodeTurnservers, Partition, PayloadInvite, PayloadMeetingState, PayloadPairingCodeSIP, PayloadPairingCodeWebRTC, Recording, RecordingRecordingChapters, RecordingRecordingSessions, RecordingStartedBy, RecordingSummary, Room, User, UserId, AnalyticsApi, AuthenticationApi, CommandCenterApi, EnterpriseApi, HistoryApi, MeetingApi, RecordingApi, UserApi) {
  'use strict';

  /**
   * _Video_That_Works_Where_You_Do____This_site_provides_developers_access_to_APIs_from_BlueJeans_onVideo_meeting_service___From_here_you_will_be_able_to_make_actual_API_calls_to_manage_User_Accounts_Meetings_and_Recordings___Also_you_can_pull_analytical_data_as_well_retrieve_current_state_information_With_these_APIs__you_should_be_able_to_quickly_integrate_BlueJeans_video_into_your_applications_____AuthenticationAll_API_transactions__excluding_Authentication_require_an_access_token_per_OAuth_standards___BlueJeans_provides_multiple_methods_for_obtaining_an_access_token___Additionally_there_are_diffferent_scopes_of_token_access__Grant_TypesBluejeans_provides_3_different_methods_for_users_to_Authenticate___Successful_authentication_allows_BlueJeans_to_grant_an_access_token_to_the_user__Authorization_Code_Grant__Authenticate_via_a_BlueJeans_page_and_receive_an_authorization_code__Submit_authorization_with_other_tokens_and_receive_an_access_code___three_legged_OAuth_Password_Credentials_Grant__Authenticate_with_a_Username_and_password_and_receives_an_access_code___two_legged_OAuth_Client_Credentials_Grant__Similar_to_Password_Grant__two_legged_OAuth__Access__PermissionsBlueJeans_defines_3_levels_of_API_access_into_the_system___When_an_access_token_is_granted_it_carries_one_of_these_3_levels___The_scope_of_system_functionality_depends_upon_the_tokens_access_level__Meeting_level__scope_of_APIs_is_limited_to_individual_meetings__User_level__scope_depends_on_the_requested_permissions__App_level__provisioned_either_by_BlueJeans_personnel_or_the_BlueJeans_Enterprise_Admin_an_app_is_issued_a_client_key_and_secret_key__These_tokens_then_are_used_by_the_BlueJeans_Authentication_API_to_receive_the_token__The_tokens_scope_provides_access_to_the_entire_enterprise_and_all_of_its_users_All_endpoints_in_this_document_that_require_Enterprise_Admin_access_will_be_marked_as_such__Getting_StartedBefore_you_start_using_the_APIs_on_this_site_you_must_first_have_a_BlueJeans_account___With_your_BlueJean_credentials_use_on_of_the_Authentication_methods_to_obtain_an_access_token____Click_on_the_Authorize_button_at_the_top_of_page___Enter_your_access_token_in_the_field_marked_api_keyNow_the_web_site_will_automatically_include_your_access_token_on_all_API_calls_you_make_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BlueJeansOnVideoRestApi = require('index'); // See note below*.
   * var xxxSvc = new BlueJeansOnVideoRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BlueJeansOnVideoRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BlueJeansOnVideoRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BlueJeansOnVideoRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AnalyticsEndpointDistribution model constructor.
     * @property {module:model/AnalyticsEndpointDistribution}
     */
    AnalyticsEndpointDistribution: AnalyticsEndpointDistribution,
    /**
     * The AnalyticsEndpointDistributionDistribution model constructor.
     * @property {module:model/AnalyticsEndpointDistributionDistribution}
     */
    AnalyticsEndpointDistributionDistribution: AnalyticsEndpointDistributionDistribution,
    /**
     * The AnalyticsFeedbackComments model constructor.
     * @property {module:model/AnalyticsFeedbackComments}
     */
    AnalyticsFeedbackComments: AnalyticsFeedbackComments,
    /**
     * The AnalyticsFeedbackCommentsComments model constructor.
     * @property {module:model/AnalyticsFeedbackCommentsComments}
     */
    AnalyticsFeedbackCommentsComments: AnalyticsFeedbackCommentsComments,
    /**
     * The AnalyticsFeedbackScores model constructor.
     * @property {module:model/AnalyticsFeedbackScores}
     */
    AnalyticsFeedbackScores: AnalyticsFeedbackScores,
    /**
     * The AnalyticsRoiData model constructor.
     * @property {module:model/AnalyticsRoiData}
     */
    AnalyticsRoiData: AnalyticsRoiData,
    /**
     * The AnalyticsRoiDataRoiRanges model constructor.
     * @property {module:model/AnalyticsRoiDataRoiRanges}
     */
    AnalyticsRoiDataRoiRanges: AnalyticsRoiDataRoiRanges,
    /**
     * The AnalyticsTopUsers model constructor.
     * @property {module:model/AnalyticsTopUsers}
     */
    AnalyticsTopUsers: AnalyticsTopUsers,
    /**
     * The AnalyticsTopUsersUsage model constructor.
     * @property {module:model/AnalyticsTopUsersUsage}
     */
    AnalyticsTopUsersUsage: AnalyticsTopUsersUsage,
    /**
     * The AnalyticsUsage model constructor.
     * @property {module:model/AnalyticsUsage}
     */
    AnalyticsUsage: AnalyticsUsage,
    /**
     * The AnalyticsUsageUsage model constructor.
     * @property {module:model/AnalyticsUsageUsage}
     */
    AnalyticsUsageUsage: AnalyticsUsageUsage,
    /**
     * The Attendee model constructor.
     * @property {module:model/Attendee}
     */
    Attendee: Attendee,
    /**
     * The Content model constructor.
     * @property {module:model/Content}
     */
    Content: Content,
    /**
     * The ContentContentProperties model constructor.
     * @property {module:model/ContentContentProperties}
     */
    ContentContentProperties: ContentContentProperties,
    /**
     * The ContentContentPropertiesLevels model constructor.
     * @property {module:model/ContentContentPropertiesLevels}
     */
    ContentContentPropertiesLevels: ContentContentPropertiesLevels,
    /**
     * The Endpoint model constructor.
     * @property {module:model/Endpoint}
     */
    Endpoint: Endpoint,
    /**
     * The EndpointIndigo model constructor.
     * @property {module:model/EndpointIndigo}
     */
    EndpointIndigo: EndpointIndigo,
    /**
     * The EndpointIndigoEndpointAttributes1 model constructor.
     * @property {module:model/EndpointIndigoEndpointAttributes1}
     */
    EndpointIndigoEndpointAttributes1: EndpointIndigoEndpointAttributes1,
    /**
     * The EndpointIndigoLocation model constructor.
     * @property {module:model/EndpointIndigoLocation}
     */
    EndpointIndigoLocation: EndpointIndigoLocation,
    /**
     * The EndpointIndigoSummaryStats model constructor.
     * @property {module:model/EndpointIndigoSummaryStats}
     */
    EndpointIndigoSummaryStats: EndpointIndigoSummaryStats,
    /**
     * The EndpointIndigoTraceroute model constructor.
     * @property {module:model/EndpointIndigoTraceroute}
     */
    EndpointIndigoTraceroute: EndpointIndigoTraceroute,
    /**
     * The EndpointIndigoTracerouteTracePath model constructor.
     * @property {module:model/EndpointIndigoTracerouteTracePath}
     */
    EndpointIndigoTracerouteTracePath: EndpointIndigoTracerouteTracePath,
    /**
     * The Endpoints model constructor.
     * @property {module:model/Endpoints}
     */
    Endpoints: Endpoints,
    /**
     * The EndpointsInner model constructor.
     * @property {module:model/EndpointsInner}
     */
    EndpointsInner: EndpointsInner,
    /**
     * The EndpointsInnerConnections model constructor.
     * @property {module:model/EndpointsInnerConnections}
     */
    EndpointsInnerConnections: EndpointsInnerConnections,
    /**
     * The Enterprise model constructor.
     * @property {module:model/Enterprise}
     */
    Enterprise: Enterprise,
    /**
     * The EnterpriseUserList model constructor.
     * @property {module:model/EnterpriseUserList}
     */
    EnterpriseUserList: EnterpriseUserList,
    /**
     * The EnterpriseUserListUsers model constructor.
     * @property {module:model/EnterpriseUserListUsers}
     */
    EnterpriseUserListUsers: EnterpriseUserListUsers,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The GrantClient model constructor.
     * @property {module:model/GrantClient}
     */
    GrantClient: GrantClient,
    /**
     * The GrantClientScope model constructor.
     * @property {module:model/GrantClientScope}
     */
    GrantClientScope: GrantClientScope,
    /**
     * The GrantMeeting model constructor.
     * @property {module:model/GrantMeeting}
     */
    GrantMeeting: GrantMeeting,
    /**
     * The GrantMeetingScope model constructor.
     * @property {module:model/GrantMeetingScope}
     */
    GrantMeetingScope: GrantMeetingScope,
    /**
     * The GrantMeetingScopeMeeting model constructor.
     * @property {module:model/GrantMeetingScopeMeeting}
     */
    GrantMeetingScopeMeeting: GrantMeetingScopeMeeting,
    /**
     * The GrantPassword model constructor.
     * @property {module:model/GrantPassword}
     */
    GrantPassword: GrantPassword,
    /**
     * The GrantPasswordScope model constructor.
     * @property {module:model/GrantPasswordScope}
     */
    GrantPasswordScope: GrantPasswordScope,
    /**
     * The GrantRequestClient model constructor.
     * @property {module:model/GrantRequestClient}
     */
    GrantRequestClient: GrantRequestClient,
    /**
     * The GrantRequestMeeting model constructor.
     * @property {module:model/GrantRequestMeeting}
     */
    GrantRequestMeeting: GrantRequestMeeting,
    /**
     * The GrantRequestPassword model constructor.
     * @property {module:model/GrantRequestPassword}
     */
    GrantRequestPassword: GrantRequestPassword,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The Layout model constructor.
     * @property {module:model/Layout}
     */
    Layout: Layout,
    /**
     * The Meeting model constructor.
     * @property {module:model/Meeting}
     */
    Meeting: Meeting,
    /**
     * The MeetingAdvancedMeetingOptions model constructor.
     * @property {module:model/MeetingAdvancedMeetingOptions}
     */
    MeetingAdvancedMeetingOptions: MeetingAdvancedMeetingOptions,
    /**
     * The MeetingExtendedIndigo model constructor.
     * @property {module:model/MeetingExtendedIndigo}
     */
    MeetingExtendedIndigo: MeetingExtendedIndigo,
    /**
     * The MeetingHistory model constructor.
     * @property {module:model/MeetingHistory}
     */
    MeetingHistory: MeetingHistory,
    /**
     * The MeetingHistoryLeaderInfo model constructor.
     * @property {module:model/MeetingHistoryLeaderInfo}
     */
    MeetingHistoryLeaderInfo: MeetingHistoryLeaderInfo,
    /**
     * The MeetingHistoryParticipantList model constructor.
     * @property {module:model/MeetingHistoryParticipantList}
     */
    MeetingHistoryParticipantList: MeetingHistoryParticipantList,
    /**
     * The MeetingHistorySharing model constructor.
     * @property {module:model/MeetingHistorySharing}
     */
    MeetingHistorySharing: MeetingHistorySharing,
    /**
     * The MeetingIndigo model constructor.
     * @property {module:model/MeetingIndigo}
     */
    MeetingIndigo: MeetingIndigo,
    /**
     * The MeetingIndigoList model constructor.
     * @property {module:model/MeetingIndigoList}
     */
    MeetingIndigoList: MeetingIndigoList,
    /**
     * The MeetingState model constructor.
     * @property {module:model/MeetingState}
     */
    MeetingState: MeetingState,
    /**
     * The MeetingStateRecordinginfo model constructor.
     * @property {module:model/MeetingStateRecordinginfo}
     */
    MeetingStateRecordinginfo: MeetingStateRecordinginfo,
    /**
     * The Numbers model constructor.
     * @property {module:model/Numbers}
     */
    Numbers: Numbers,
    /**
     * The NumbersLabel model constructor.
     * @property {module:model/NumbersLabel}
     */
    NumbersLabel: NumbersLabel,
    /**
     * The NumbersNumbers model constructor.
     * @property {module:model/NumbersNumbers}
     */
    NumbersNumbers: NumbersNumbers,
    /**
     * The PairingCode model constructor.
     * @property {module:model/PairingCode}
     */
    PairingCode: PairingCode,
    /**
     * The PairingCodeTurnservers model constructor.
     * @property {module:model/PairingCodeTurnservers}
     */
    PairingCodeTurnservers: PairingCodeTurnservers,
    /**
     * The Partition model constructor.
     * @property {module:model/Partition}
     */
    Partition: Partition,
    /**
     * The PayloadInvite model constructor.
     * @property {module:model/PayloadInvite}
     */
    PayloadInvite: PayloadInvite,
    /**
     * The PayloadMeetingState model constructor.
     * @property {module:model/PayloadMeetingState}
     */
    PayloadMeetingState: PayloadMeetingState,
    /**
     * The PayloadPairingCodeSIP model constructor.
     * @property {module:model/PayloadPairingCodeSIP}
     */
    PayloadPairingCodeSIP: PayloadPairingCodeSIP,
    /**
     * The PayloadPairingCodeWebRTC model constructor.
     * @property {module:model/PayloadPairingCodeWebRTC}
     */
    PayloadPairingCodeWebRTC: PayloadPairingCodeWebRTC,
    /**
     * The Recording model constructor.
     * @property {module:model/Recording}
     */
    Recording: Recording,
    /**
     * The RecordingRecordingChapters model constructor.
     * @property {module:model/RecordingRecordingChapters}
     */
    RecordingRecordingChapters: RecordingRecordingChapters,
    /**
     * The RecordingRecordingSessions model constructor.
     * @property {module:model/RecordingRecordingSessions}
     */
    RecordingRecordingSessions: RecordingRecordingSessions,
    /**
     * The RecordingStartedBy model constructor.
     * @property {module:model/RecordingStartedBy}
     */
    RecordingStartedBy: RecordingStartedBy,
    /**
     * The RecordingSummary model constructor.
     * @property {module:model/RecordingSummary}
     */
    RecordingSummary: RecordingSummary,
    /**
     * The Room model constructor.
     * @property {module:model/Room}
     */
    Room: Room,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserId model constructor.
     * @property {module:model/UserId}
     */
    UserId: UserId,
    /**
     * The AnalyticsApi service constructor.
     * @property {module:api/AnalyticsApi}
     */
    AnalyticsApi: AnalyticsApi,
    /**
     * The AuthenticationApi service constructor.
     * @property {module:api/AuthenticationApi}
     */
    AuthenticationApi: AuthenticationApi,
    /**
     * The CommandCenterApi service constructor.
     * @property {module:api/CommandCenterApi}
     */
    CommandCenterApi: CommandCenterApi,
    /**
     * The EnterpriseApi service constructor.
     * @property {module:api/EnterpriseApi}
     */
    EnterpriseApi: EnterpriseApi,
    /**
     * The HistoryApi service constructor.
     * @property {module:api/HistoryApi}
     */
    HistoryApi: HistoryApi,
    /**
     * The MeetingApi service constructor.
     * @property {module:api/MeetingApi}
     */
    MeetingApi: MeetingApi,
    /**
     * The RecordingApi service constructor.
     * @property {module:api/RecordingApi}
     */
    RecordingApi: RecordingApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi
  };

  return exports;
}));
