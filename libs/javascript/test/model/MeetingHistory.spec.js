/**
 * BlueJeans onVideo REST API
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\").  ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use one of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BlueJeansOnVideoRestApi);
  }
}(this, function(expect, BlueJeansOnVideoRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BlueJeansOnVideoRestApi.MeetingHistory();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MeetingHistory', function() {
    it('should create an instance of MeetingHistory', function() {
      // uncomment below and update the code to test MeetingHistory
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be.a(BlueJeansOnVideoRestApi.MeetingHistory);
    });

    it('should have the property meetingGuid (base name: "meetingGuid")', function() {
      // uncomment below and update the code to test the property meetingGuid
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property meetingNumericId (base name: "meetingNumericId")', function() {
      // uncomment below and update the code to test the property meetingNumericId
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property leaderInfo (base name: "leaderInfo")', function() {
      // uncomment below and update the code to test the property leaderInfo
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property meetingDuration (base name: "meetingDuration")', function() {
      // uncomment below and update the code to test the property meetingDuration
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property maxParticipantCount (base name: "maxParticipantCount")', function() {
      // uncomment below and update the code to test the property maxParticipantCount
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property totalParticipantMinutes (base name: "totalParticipantMinutes")', function() {
      // uncomment below and update the code to test the property totalParticipantMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property maxParticipantMinutes (base name: "maxParticipantMinutes")', function() {
      // uncomment below and update the code to test the property maxParticipantMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property extraParticipantMinutes (base name: "extraParticipantMinutes")', function() {
      // uncomment below and update the code to test the property extraParticipantMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property isdnEndpoints (base name: "isdnEndpoints")', function() {
      // uncomment below and update the code to test the property isdnEndpoints
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property totalDialoutMinutes (base name: "totalDialoutMinutes")', function() {
      // uncomment below and update the code to test the property totalDialoutMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property totalTollFreeMinutes (base name: "totalTollFreeMinutes")', function() {
      // uncomment below and update the code to test the property totalTollFreeMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property callDIDMinutes (base name: "callDIDMinutes")', function() {
      // uncomment below and update the code to test the property callDIDMinutes
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property meetingStatus (base name: "meetingStatus")', function() {
      // uncomment below and update the code to test the property meetingStatus
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property meetingThumbnail (base name: "meetingThumbnail")', function() {
      // uncomment below and update the code to test the property meetingThumbnail
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property startTimeZone (base name: "startTimeZone")', function() {
      // uncomment below and update the code to test the property startTimeZone
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property processingStatus (base name: "processingStatus")', function() {
      // uncomment below and update the code to test the property processingStatus
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property concurrentCalls (base name: "concurrentCalls")', function() {
      // uncomment below and update the code to test the property concurrentCalls
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property uploadStatus (base name: "uploadStatus")', function() {
      // uncomment below and update the code to test the property uploadStatus
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property pstnonly (base name: "pstnonly")', function() {
      // uncomment below and update the code to test the property pstnonly
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

    it('should have the property participantList (base name: "participantList")', function() {
      // uncomment below and update the code to test the property participantList
      //var instane = new BlueJeansOnVideoRestApi.MeetingHistory();
      //expect(instance).to.be();
    });

  });

}));
