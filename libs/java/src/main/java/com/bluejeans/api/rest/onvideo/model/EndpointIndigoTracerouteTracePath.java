/*
 * BlueJeans onVideo REST API
 *  # Video That Works Where You Do. This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data and current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video administration into your applications.     ## Getting Started Before you start using BlueJeans' API's, you must first have a BlueJeans account enabled for API Access.  Contact [BlueJeans Support](mailto:Support@BlueJeans.com) for assistance.  <br /><br />Once you have an account, you may start writing application code to authenticate and make API calls.  *Alternatively*, you can use this developer site to test the BlueJeans' API's and develop a level of familiarity before you write production code.  <br /> ### To Make API Calls from This Site If you want to use this developer site to try various BlueJeans' API's, here are the steps required to authenticate and enable your Developer Session to place API calls. 1. Choose Method for Authenticating       * Click on the desired Authentication method from below.      * Click on the **Try It Out** button. 1. Make Authentication request      * Follow API's instructions and input the API parameters.      * Click on the blue **Execute** button.      * If successful, the API returns with JSON data containing a field called **access_token**.  Copy/save this value. 1. Authorize BlueJeans Developer Session.      * Click on the green **Authorize button**.       * The site will show you a pop-up window for authorization.      * Enter your access token in the field named **api_key**      * Click on the **Authorize** button  Your current BlueJeans developer session is now authenticated and ready to place API calls.  The web site will automatically include your access token on any API calls you make.  ## About onVideo Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ### Grant Types Bluejeans provides 4 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to perform API operations. * Password Credentials Grant – Authenticate with a username and password and receive an access token with user level permission. Known as two-legged OAuth. * Meeting Credentials Grant – Authenticate with a meeting ID and meeting passcode and receive an access token with meeting level permission. Known as two-legged OAuth. * Client Credentials Grant –  Authenticate with a client ID and client secret and receive an access token with enterprise level permission. Known as two-legged OAuth. * Authorization Code Grant – Authentication for your developer's application occurs through a redirection to a BlueJeans authentication page. The application receives an authorization code to be submitted, along with other tokens, to receive an access token. Known as three-legged OAuth. For more information please refer to the [OAuth specification](https://oauth.net/). ### Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – Scope of APIs is limited to individual meetings. * User-level – Scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users. All endpoints in this document that require **Enterprise Admin** access will be marked as such. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.onvideo.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * EndpointIndigoTracerouteTracePath
 */

public class EndpointIndigoTracerouteTracePath {
  @SerializedName("name")
  private String name = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("delay1")
  private BigDecimal delay1 = null;

  @SerializedName("delay2")
  private BigDecimal delay2 = null;

  @SerializedName("delay3")
  private BigDecimal delay3 = null;

  @SerializedName("asapath")
  private String asapath = null;

  public EndpointIndigoTracerouteTracePath name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EndpointIndigoTracerouteTracePath ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public EndpointIndigoTracerouteTracePath delay1(BigDecimal delay1) {
    this.delay1 = delay1;
    return this;
  }

   /**
   * Get delay1
   * @return delay1
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getDelay1() {
    return delay1;
  }

  public void setDelay1(BigDecimal delay1) {
    this.delay1 = delay1;
  }

  public EndpointIndigoTracerouteTracePath delay2(BigDecimal delay2) {
    this.delay2 = delay2;
    return this;
  }

   /**
   * Get delay2
   * @return delay2
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getDelay2() {
    return delay2;
  }

  public void setDelay2(BigDecimal delay2) {
    this.delay2 = delay2;
  }

  public EndpointIndigoTracerouteTracePath delay3(BigDecimal delay3) {
    this.delay3 = delay3;
    return this;
  }

   /**
   * Get delay3
   * @return delay3
  **/
  @ApiModelProperty(example = "null", value = "")
  public BigDecimal getDelay3() {
    return delay3;
  }

  public void setDelay3(BigDecimal delay3) {
    this.delay3 = delay3;
  }

  public EndpointIndigoTracerouteTracePath asapath(String asapath) {
    this.asapath = asapath;
    return this;
  }

   /**
   * Get asapath
   * @return asapath
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAsapath() {
    return asapath;
  }

  public void setAsapath(String asapath) {
    this.asapath = asapath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointIndigoTracerouteTracePath endpointIndigoTracerouteTracePath = (EndpointIndigoTracerouteTracePath) o;
    return Objects.equals(this.name, endpointIndigoTracerouteTracePath.name) &&
        Objects.equals(this.ip, endpointIndigoTracerouteTracePath.ip) &&
        Objects.equals(this.delay1, endpointIndigoTracerouteTracePath.delay1) &&
        Objects.equals(this.delay2, endpointIndigoTracerouteTracePath.delay2) &&
        Objects.equals(this.delay3, endpointIndigoTracerouteTracePath.delay3) &&
        Objects.equals(this.asapath, endpointIndigoTracerouteTracePath.asapath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ip, delay1, delay2, delay3, asapath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointIndigoTracerouteTracePath {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    delay1: ").append(toIndentedString(delay1)).append("\n");
    sb.append("    delay2: ").append(toIndentedString(delay2)).append("\n");
    sb.append("    delay3: ").append(toIndentedString(delay3)).append("\n");
    sb.append("    asapath: ").append(toIndentedString(asapath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

