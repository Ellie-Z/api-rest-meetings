/*
 * BlueJeans onVideo REST API
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\").  ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use on of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.onvideo.model;

import java.util.Objects;
import com.bluejeans.api.rest.onvideo.model.NumbersNumbers;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Numbers
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-26T17:15:49.025-06:00")
public class Numbers {
  @SerializedName("meetingId")
  private String meetingId = null;

  @SerializedName("allowDirectDial")
  private Boolean allowDirectDial = null;

  @SerializedName("useAttendeePasscode")
  private Boolean useAttendeePasscode = null;

  @SerializedName("pstnNumbersUrl")
  private String pstnNumbersUrl = null;

  @SerializedName("moderatorPasscode")
  private String moderatorPasscode = null;

  @SerializedName("precision")
  private String precision = null;

  @SerializedName("pstnLocalizationSupported")
  private Boolean pstnLocalizationSupported = null;

  @SerializedName("partnerIntegratedMeeting")
  private Boolean partnerIntegratedMeeting = null;

  @SerializedName("numbers")
  private List<NumbersNumbers> numbers = new ArrayList<NumbersNumbers>();

  public Numbers meetingId(String meetingId) {
    this.meetingId = meetingId;
    return this;
  }

   /**
   * Get meetingId
   * @return meetingId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMeetingId() {
    return meetingId;
  }

  public void setMeetingId(String meetingId) {
    this.meetingId = meetingId;
  }

  public Numbers allowDirectDial(Boolean allowDirectDial) {
    this.allowDirectDial = allowDirectDial;
    return this;
  }

   /**
   * Get allowDirectDial
   * @return allowDirectDial
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getAllowDirectDial() {
    return allowDirectDial;
  }

  public void setAllowDirectDial(Boolean allowDirectDial) {
    this.allowDirectDial = allowDirectDial;
  }

  public Numbers useAttendeePasscode(Boolean useAttendeePasscode) {
    this.useAttendeePasscode = useAttendeePasscode;
    return this;
  }

   /**
   * Get useAttendeePasscode
   * @return useAttendeePasscode
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getUseAttendeePasscode() {
    return useAttendeePasscode;
  }

  public void setUseAttendeePasscode(Boolean useAttendeePasscode) {
    this.useAttendeePasscode = useAttendeePasscode;
  }

  public Numbers pstnNumbersUrl(String pstnNumbersUrl) {
    this.pstnNumbersUrl = pstnNumbersUrl;
    return this;
  }

   /**
   * Get pstnNumbersUrl
   * @return pstnNumbersUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPstnNumbersUrl() {
    return pstnNumbersUrl;
  }

  public void setPstnNumbersUrl(String pstnNumbersUrl) {
    this.pstnNumbersUrl = pstnNumbersUrl;
  }

  public Numbers moderatorPasscode(String moderatorPasscode) {
    this.moderatorPasscode = moderatorPasscode;
    return this;
  }

   /**
   * Get moderatorPasscode
   * @return moderatorPasscode
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getModeratorPasscode() {
    return moderatorPasscode;
  }

  public void setModeratorPasscode(String moderatorPasscode) {
    this.moderatorPasscode = moderatorPasscode;
  }

  public Numbers precision(String precision) {
    this.precision = precision;
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPrecision() {
    return precision;
  }

  public void setPrecision(String precision) {
    this.precision = precision;
  }

  public Numbers pstnLocalizationSupported(Boolean pstnLocalizationSupported) {
    this.pstnLocalizationSupported = pstnLocalizationSupported;
    return this;
  }

   /**
   * Get pstnLocalizationSupported
   * @return pstnLocalizationSupported
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPstnLocalizationSupported() {
    return pstnLocalizationSupported;
  }

  public void setPstnLocalizationSupported(Boolean pstnLocalizationSupported) {
    this.pstnLocalizationSupported = pstnLocalizationSupported;
  }

  public Numbers partnerIntegratedMeeting(Boolean partnerIntegratedMeeting) {
    this.partnerIntegratedMeeting = partnerIntegratedMeeting;
    return this;
  }

   /**
   * Get partnerIntegratedMeeting
   * @return partnerIntegratedMeeting
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getPartnerIntegratedMeeting() {
    return partnerIntegratedMeeting;
  }

  public void setPartnerIntegratedMeeting(Boolean partnerIntegratedMeeting) {
    this.partnerIntegratedMeeting = partnerIntegratedMeeting;
  }

  public Numbers numbers(List<NumbersNumbers> numbers) {
    this.numbers = numbers;
    return this;
  }

  public Numbers addNumbersItem(NumbersNumbers numbersItem) {
    this.numbers.add(numbersItem);
    return this;
  }

   /**
   * Get numbers
   * @return numbers
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<NumbersNumbers> getNumbers() {
    return numbers;
  }

  public void setNumbers(List<NumbersNumbers> numbers) {
    this.numbers = numbers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Numbers numbers = (Numbers) o;
    return Objects.equals(this.meetingId, numbers.meetingId) &&
        Objects.equals(this.allowDirectDial, numbers.allowDirectDial) &&
        Objects.equals(this.useAttendeePasscode, numbers.useAttendeePasscode) &&
        Objects.equals(this.pstnNumbersUrl, numbers.pstnNumbersUrl) &&
        Objects.equals(this.moderatorPasscode, numbers.moderatorPasscode) &&
        Objects.equals(this.precision, numbers.precision) &&
        Objects.equals(this.pstnLocalizationSupported, numbers.pstnLocalizationSupported) &&
        Objects.equals(this.partnerIntegratedMeeting, numbers.partnerIntegratedMeeting) &&
        Objects.equals(this.numbers, numbers.numbers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meetingId, allowDirectDial, useAttendeePasscode, pstnNumbersUrl, moderatorPasscode, precision, pstnLocalizationSupported, partnerIntegratedMeeting, numbers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Numbers {\n");
    
    sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
    sb.append("    allowDirectDial: ").append(toIndentedString(allowDirectDial)).append("\n");
    sb.append("    useAttendeePasscode: ").append(toIndentedString(useAttendeePasscode)).append("\n");
    sb.append("    pstnNumbersUrl: ").append(toIndentedString(pstnNumbersUrl)).append("\n");
    sb.append("    moderatorPasscode: ").append(toIndentedString(moderatorPasscode)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    pstnLocalizationSupported: ").append(toIndentedString(pstnLocalizationSupported)).append("\n");
    sb.append("    partnerIntegratedMeeting: ").append(toIndentedString(partnerIntegratedMeeting)).append("\n");
    sb.append("    numbers: ").append(toIndentedString(numbers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

