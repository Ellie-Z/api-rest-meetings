/*
 * BlueJeans onVideo REST API
 * _Video That Works Where You Do._  This site provides developers access to API's from BlueJean's onVideo meeting service.  From here you will be able to make actual API calls to manage User Accounts, Meetings, and Recordings.  Also, you can pull analytical data as well retrieve current state information.  With these API's  you should be able to quickly integrate **BlueJeans** video into your applications.     # Authentication All API transactions (excluding Authentication) require an access token per **OAuth standards**.  BlueJeans provides multiple methods for obtaining an access token.  Additionally there are diffferent scopes of token access. ## Grant Types Bluejeans provides 3 different methods for users to Authenticate.  Successful authentication allows BlueJeans to grant an access token to the user. * Authorization Code Grant – Authenticate via a BlueJeans page, and receive an authorization code. Submit authorization with other tokens and receive an access code. (\"three-legged OAuth\") * Password Credentials Grant – Authenticate with a Username and password and receives an access code. (\"two-legged OAuth\"); * Client Credentials Grant – Similar to Password Grant (\"two-legged OAuth\").  ## Access & Permissions BlueJeans defines 3 levels of API access into the system.  When an access token is granted, it carries one of these 3 levels.  The scope of system functionality depends upon the token's access level. * Meeting-level – scope of APIs is limited to individual meetings. * User-level – scope depends on the requested permissions. * App-level – provisioned either by BlueJeans personnel, or the BlueJeans Enterprise Admin, an app, is issued a client key and secret key. These tokens then are used by the BlueJeans Authentication API to receive the token. The token's scope provides access to the entire enterprise and all of its users.  All endpoints in this document that require **Enterprise Admin** access will be marked as such. # Getting Started Before you start using the API's on this site, you must first have a BlueJeans account.  With your BlueJean credentials, use on of the Authentication methods to obtain an access token. - Click on the Authorize button at the top of page - Enter your access token in the field marked \"api_key\" Now the web site will automatically include your access token on all API calls you make. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bluejeans.api.rest.onvideo.model;

import java.util.Objects;
import com.bluejeans.api.rest.onvideo.model.RecordingStartedBy;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * RecordingRecordingSessions
 */

public class RecordingRecordingSessions {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("contentStatus")
  private String contentStatus = null;

  @SerializedName("recordingType")
  private String recordingType = null;

  @SerializedName("contentId")
  private Integer contentId = null;

  @SerializedName("thumbnailUrl")
  private String thumbnailUrl = null;

  @SerializedName("startTimeOffset")
  private Integer startTimeOffset = null;

  @SerializedName("endTimeOffset")
  private Integer endTimeOffset = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("startedBy")
  private RecordingStartedBy startedBy = null;

  @SerializedName("stoppedBy")
  private RecordingStartedBy stoppedBy = null;

  public RecordingRecordingSessions id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public RecordingRecordingSessions contentStatus(String contentStatus) {
    this.contentStatus = contentStatus;
    return this;
  }

   /**
   * Get contentStatus
   * @return contentStatus
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getContentStatus() {
    return contentStatus;
  }

  public void setContentStatus(String contentStatus) {
    this.contentStatus = contentStatus;
  }

  public RecordingRecordingSessions recordingType(String recordingType) {
    this.recordingType = recordingType;
    return this;
  }

   /**
   * Get recordingType
   * @return recordingType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRecordingType() {
    return recordingType;
  }

  public void setRecordingType(String recordingType) {
    this.recordingType = recordingType;
  }

  public RecordingRecordingSessions contentId(Integer contentId) {
    this.contentId = contentId;
    return this;
  }

   /**
   * Get contentId
   * @return contentId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getContentId() {
    return contentId;
  }

  public void setContentId(Integer contentId) {
    this.contentId = contentId;
  }

  public RecordingRecordingSessions thumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

   /**
   * Get thumbnailUrl
   * @return thumbnailUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }

  public RecordingRecordingSessions startTimeOffset(Integer startTimeOffset) {
    this.startTimeOffset = startTimeOffset;
    return this;
  }

   /**
   * Get startTimeOffset
   * @return startTimeOffset
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getStartTimeOffset() {
    return startTimeOffset;
  }

  public void setStartTimeOffset(Integer startTimeOffset) {
    this.startTimeOffset = startTimeOffset;
  }

  public RecordingRecordingSessions endTimeOffset(Integer endTimeOffset) {
    this.endTimeOffset = endTimeOffset;
    return this;
  }

   /**
   * Get endTimeOffset
   * @return endTimeOffset
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getEndTimeOffset() {
    return endTimeOffset;
  }

  public void setEndTimeOffset(Integer endTimeOffset) {
    this.endTimeOffset = endTimeOffset;
  }

  public RecordingRecordingSessions duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public RecordingRecordingSessions startedBy(RecordingStartedBy startedBy) {
    this.startedBy = startedBy;
    return this;
  }

   /**
   * Get startedBy
   * @return startedBy
  **/
  @ApiModelProperty(example = "null", value = "")
  public RecordingStartedBy getStartedBy() {
    return startedBy;
  }

  public void setStartedBy(RecordingStartedBy startedBy) {
    this.startedBy = startedBy;
  }

  public RecordingRecordingSessions stoppedBy(RecordingStartedBy stoppedBy) {
    this.stoppedBy = stoppedBy;
    return this;
  }

   /**
   * Get stoppedBy
   * @return stoppedBy
  **/
  @ApiModelProperty(example = "null", value = "")
  public RecordingStartedBy getStoppedBy() {
    return stoppedBy;
  }

  public void setStoppedBy(RecordingStartedBy stoppedBy) {
    this.stoppedBy = stoppedBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordingRecordingSessions recordingRecordingSessions = (RecordingRecordingSessions) o;
    return Objects.equals(this.id, recordingRecordingSessions.id) &&
        Objects.equals(this.contentStatus, recordingRecordingSessions.contentStatus) &&
        Objects.equals(this.recordingType, recordingRecordingSessions.recordingType) &&
        Objects.equals(this.contentId, recordingRecordingSessions.contentId) &&
        Objects.equals(this.thumbnailUrl, recordingRecordingSessions.thumbnailUrl) &&
        Objects.equals(this.startTimeOffset, recordingRecordingSessions.startTimeOffset) &&
        Objects.equals(this.endTimeOffset, recordingRecordingSessions.endTimeOffset) &&
        Objects.equals(this.duration, recordingRecordingSessions.duration) &&
        Objects.equals(this.startedBy, recordingRecordingSessions.startedBy) &&
        Objects.equals(this.stoppedBy, recordingRecordingSessions.stoppedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, contentStatus, recordingType, contentId, thumbnailUrl, startTimeOffset, endTimeOffset, duration, startedBy, stoppedBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordingRecordingSessions {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    contentStatus: ").append(toIndentedString(contentStatus)).append("\n");
    sb.append("    recordingType: ").append(toIndentedString(recordingType)).append("\n");
    sb.append("    contentId: ").append(toIndentedString(contentId)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    startTimeOffset: ").append(toIndentedString(startTimeOffset)).append("\n");
    sb.append("    endTimeOffset: ").append(toIndentedString(endTimeOffset)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    startedBy: ").append(toIndentedString(startedBy)).append("\n");
    sb.append("    stoppedBy: ").append(toIndentedString(stoppedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

