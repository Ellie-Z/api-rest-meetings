/**
 * BlueJeans onVideo REST API
 * _Video That Works Where You Do, from the world's leader in cloud video communication._ # Authentication Each API request that is sent to BlueJeans requires an access token, which is obtained through the BlueJeans Authentication API. There are several methods (grant types) for obtaining an access token, which follow the OAuth2.0 specification. ## Grant Types * Authorization Code Grant – This grant type is used in an authentication flow commonly referred to as \"three-legged OAuth\". The user authenticates via a BlueJeans page, which provides an authorization code. This code, along with a few other elements, can be used to obtain an access code. * Password Credentials Grant – This grant type is used in a two-legged OAuth flow. Username and password are sent to retrieve an access code. * Client Credentials Grant – This grant type is used in a two-legged OAuth flow.  ## Access & Permissions The access level that is associated with each access token is referred to as the scope. There are three basic levels of access that BlueJeans allows, which affect the level of scope.  Three access levels exist within the Blue Jeans service today. * Meeting-level – Authentication takes place using a meeting ID and passcode, and the scope is limited to APIs that relate to the individual meeting. * User-level – Authentication either takes place via three-legged OAuth, or else a direct authorization token request containing a username or password. Access level depends on the requested scope permissions. * App-level – An application is provisioned either by BlueJeans personnel, or within the BlueJeans Enterprise Admin interface. When provisioning an app, a client key and secret are provided, which is then used to obtain an access token, via the BlueJeans Authentication API. The scope that is associated with the token will provide access to an entire enterprise and all of its users.  All endpoints in this document that require Enterprise Admin access will be marked as such. ## Testing In order to make effective use of this page, you will first use one of the authentication methods to obtain an access token. Once the token is given, use the Authenticate button up in the header to store the token. Each BlueJeans API called after that will use the access token provided. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandon@bluejeans.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.bluejeans.api.rest;

import com.bluejeans.api.ApiCallback;
import com.bluejeans.api.ApiClient;
import com.bluejeans.api.ApiException;
import com.bluejeans.api.ApiResponse;
import com.bluejeans.api.Configuration;
import com.bluejeans.api.Pair;
import com.bluejeans.api.ProgressRequestBody;
import com.bluejeans.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;

import io.swagger.client.model.AnalyticsEndpointDistribution;
import io.swagger.client.model.Error;
import io.swagger.client.model.AnalyticsFeedbackComments;
import io.swagger.client.model.AnalyticsUsage;
import io.swagger.client.model.AnalyticsRoiData;
import io.swagger.client.model.AnalyticsTopUsers;
import io.swagger.client.model.AnalyticsFeedbackScores;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AnalyticsApi {
    private ApiClient apiClient;

    public AnalyticsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AnalyticsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetCall(Integer enterpriseId, String filter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/analytics/endpoints/distribution".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "filter", filter));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * Endpoint Distribution
     * This endpoint retrieves endpoint connection type distribution by enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"creation_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"creation_time"}])
     * @return AnalyticsEndpointDistribution
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsEndpointDistribution v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGet(Integer enterpriseId, String filter) throws ApiException {
        ApiResponse<AnalyticsEndpointDistribution> resp = v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetWithHttpInfo(enterpriseId, filter);
        return resp.getData();
    }

    /**
     * Endpoint Distribution
     * This endpoint retrieves endpoint connection type distribution by enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"creation_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"creation_time"}])
     * @return ApiResponse&lt;AnalyticsEndpointDistribution&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsEndpointDistribution> v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetWithHttpInfo(Integer enterpriseId, String filter) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetCall(enterpriseId, filter, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsEndpointDistribution>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Endpoint Distribution (asynchronously)
     * This endpoint retrieves endpoint connection type distribution by enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"creation_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"creation_time"}])
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetAsync(Integer enterpriseId, String filter, final ApiCallback<AnalyticsEndpointDistribution> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsEndpointsDistributionGetCall(enterpriseId, filter, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsEndpointDistribution>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetCall(Integer enterpriseId, String start, String end, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGet(Async)");
        }
        
        // verify the required parameter 'start' is set
        if (start == null) {
            throw new ApiException("Missing the required parameter 'start' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGet(Async)");
        }
        
        // verify the required parameter 'end' is set
        if (end == null) {
            throw new ApiException("Missing the required parameter 'end' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/analytics/feedback/comments".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (end != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "end", end));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * Survey Feedback Comments
     * This endpoint lists end of meeting survey comments by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @return AnalyticsFeedbackComments
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsFeedbackComments v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGet(Integer enterpriseId, String start, String end) throws ApiException {
        ApiResponse<AnalyticsFeedbackComments> resp = v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetWithHttpInfo(enterpriseId, start, end);
        return resp.getData();
    }

    /**
     * Survey Feedback Comments
     * This endpoint lists end of meeting survey comments by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @return ApiResponse&lt;AnalyticsFeedbackComments&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsFeedbackComments> v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetWithHttpInfo(Integer enterpriseId, String start, String end) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetCall(enterpriseId, start, end, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsFeedbackComments>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Survey Feedback Comments (asynchronously)
     * This endpoint lists end of meeting survey comments by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetAsync(Integer enterpriseId, String start, String end, final ApiCallback<AnalyticsFeedbackComments> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsFeedbackCommentsGetCall(enterpriseId, start, end, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsFeedbackComments>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetCall(Integer enterpriseId, String clientTZ, String filter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/analytics/meetings/usage".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (clientTZ != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "clientTZ", clientTZ));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "filter", filter));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * Meeting Usage Over Time
     * This endpoint reports on meeting usage.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param clientTZ Based on standard TZ code. (optional, default to America/Denver)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"string","comparison":"eq","value":"DAY","field":"groupInterval"},{"type":"date","comparison":"eq","value":"2017-01-16T00:00:00-07:00","field":"lowts"},{"type":"date","comparison":"eq","value":"2017-01-23T23:59:59-07:00","field":"hights"}])
     * @return AnalyticsUsage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsUsage v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGet(Integer enterpriseId, String clientTZ, String filter) throws ApiException {
        ApiResponse<AnalyticsUsage> resp = v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetWithHttpInfo(enterpriseId, clientTZ, filter);
        return resp.getData();
    }

    /**
     * Meeting Usage Over Time
     * This endpoint reports on meeting usage.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param clientTZ Based on standard TZ code. (optional, default to America/Denver)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"string","comparison":"eq","value":"DAY","field":"groupInterval"},{"type":"date","comparison":"eq","value":"2017-01-16T00:00:00-07:00","field":"lowts"},{"type":"date","comparison":"eq","value":"2017-01-23T23:59:59-07:00","field":"hights"}])
     * @return ApiResponse&lt;AnalyticsUsage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsUsage> v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetWithHttpInfo(Integer enterpriseId, String clientTZ, String filter) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetCall(enterpriseId, clientTZ, filter, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsUsage>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Meeting Usage Over Time (asynchronously)
     * This endpoint reports on meeting usage.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param clientTZ Based on standard TZ code. (optional, default to America/Denver)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"string","comparison":"eq","value":"DAY","field":"groupInterval"},{"type":"date","comparison":"eq","value":"2017-01-16T00:00:00-07:00","field":"lowts"},{"type":"date","comparison":"eq","value":"2017-01-23T23:59:59-07:00","field":"hights"}])
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetAsync(Integer enterpriseId, String clientTZ, String filter, final ApiCallback<AnalyticsUsage> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsMeetingsUsageGetCall(enterpriseId, clientTZ, filter, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsUsage>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetCall(Integer enterpriseId, String filter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGet(Async)");
        }
        
        // verify the required parameter 'filter' is set
        if (filter == null) {
            throw new ApiException("Missing the required parameter 'filter' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/analytics/roi_ranges".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "filter", filter));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * ROI Data
     * This endpoint lists return on investment (ROI) data for meetings.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (required)
     * @return AnalyticsRoiData
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsRoiData v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGet(Integer enterpriseId, String filter) throws ApiException {
        ApiResponse<AnalyticsRoiData> resp = v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetWithHttpInfo(enterpriseId, filter);
        return resp.getData();
    }

    /**
     * ROI Data
     * This endpoint lists return on investment (ROI) data for meetings.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (required)
     * @return ApiResponse&lt;AnalyticsRoiData&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsRoiData> v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetWithHttpInfo(Integer enterpriseId, String filter) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetCall(enterpriseId, filter, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsRoiData>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * ROI Data (asynchronously)
     * This endpoint lists return on investment (ROI) data for meetings.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetAsync(Integer enterpriseId, String filter, final ApiCallback<AnalyticsRoiData> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsRoiRangesGetCall(enterpriseId, filter, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsRoiData>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetCall(Integer enterpriseId, String filter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/analytics/users/usage".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "filter", filter));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * Top Users
     * This endpoint retrieves the top useres by usage for an enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"start_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"end_time"}])
     * @return AnalyticsTopUsers
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsTopUsers v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGet(Integer enterpriseId, String filter) throws ApiException {
        ApiResponse<AnalyticsTopUsers> resp = v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetWithHttpInfo(enterpriseId, filter);
        return resp.getData();
    }

    /**
     * Top Users
     * This endpoint retrieves the top useres by usage for an enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"start_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"end_time"}])
     * @return ApiResponse&lt;AnalyticsTopUsers&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsTopUsers> v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetWithHttpInfo(Integer enterpriseId, String filter) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetCall(enterpriseId, filter, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsTopUsers>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Top Users (asynchronously)
     * This endpoint retrieves the top useres by usage for an enterprise.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param filter URL-encoded JSON string (optional, default to [{"type":"date","comparison":"gt","value":"2017-01-16T00:00:00-07:00","field":"start_time"},{"type":"date","comparison":"lt","value":"2017-01-23T23:59:59-07:00","field":"end_time"}])
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetAsync(Integer enterpriseId, String filter, final ApiCallback<AnalyticsTopUsers> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoAnalyticsUsersUsageGetCall(enterpriseId, filter, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsTopUsers>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for v1EnterpriseEnterpriseIdIndigoFeedbackCountGet */
    private com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoFeedbackCountGetCall(Integer enterpriseId, String start, String end, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // verify the required parameter 'enterpriseId' is set
        if (enterpriseId == null) {
            throw new ApiException("Missing the required parameter 'enterpriseId' when calling v1EnterpriseEnterpriseIdIndigoFeedbackCountGet(Async)");
        }
        
        // verify the required parameter 'start' is set
        if (start == null) {
            throw new ApiException("Missing the required parameter 'start' when calling v1EnterpriseEnterpriseIdIndigoFeedbackCountGet(Async)");
        }
        
        // verify the required parameter 'end' is set
        if (end == null) {
            throw new ApiException("Missing the required parameter 'end' when calling v1EnterpriseEnterpriseIdIndigoFeedbackCountGet(Async)");
        }
        

        // create path and map variables
        String localVarPath = "/v1/enterprise/{enterprise_id}/indigo/feedback/count".replaceAll("\\{format\\}","json")
        .replaceAll("\\{" + "enterprise_id" + "\\}", apiClient.escapeString(enterpriseId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (start != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "start", start));
        if (end != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "end", end));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "access_token" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    /**
     * Survey Feedback Scores
     * This endpoint lists end of meeting survey scores by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @return AnalyticsFeedbackScores
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public AnalyticsFeedbackScores v1EnterpriseEnterpriseIdIndigoFeedbackCountGet(Integer enterpriseId, String start, String end) throws ApiException {
        ApiResponse<AnalyticsFeedbackScores> resp = v1EnterpriseEnterpriseIdIndigoFeedbackCountGetWithHttpInfo(enterpriseId, start, end);
        return resp.getData();
    }

    /**
     * Survey Feedback Scores
     * This endpoint lists end of meeting survey scores by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @return ApiResponse&lt;AnalyticsFeedbackScores&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<AnalyticsFeedbackScores> v1EnterpriseEnterpriseIdIndigoFeedbackCountGetWithHttpInfo(Integer enterpriseId, String start, String end) throws ApiException {
        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoFeedbackCountGetCall(enterpriseId, start, end, null, null);
        Type localVarReturnType = new TypeToken<AnalyticsFeedbackScores>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Survey Feedback Scores (asynchronously)
     * This endpoint lists end of meeting survey scores by enterprise by time period.
     * @param enterpriseId The ID of the enterprise of interest. This value is an integer which can be retrieved for the current user via the Get Enterprise Profile endpoint. (required)
     * @param start Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param end Date and time in an [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call v1EnterpriseEnterpriseIdIndigoFeedbackCountGetAsync(Integer enterpriseId, String start, String end, final ApiCallback<AnalyticsFeedbackScores> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = v1EnterpriseEnterpriseIdIndigoFeedbackCountGetCall(enterpriseId, start, end, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<AnalyticsFeedbackScores>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
